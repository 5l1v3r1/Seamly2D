language: cpp
sudo: false
matrix:
  include:
  - os: linux
    dist: trusty
    compiler: gcc
    env:
    - DEPLOY=true
    - CCACHE_CPP2=yes
    cache:
    - ccache
  - os: osx
    compiler: clang
    env: DEPLOY=true
before_install:
- |
  if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then
    sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
    sudo add-apt-repository -y ppa:beineri/opt-qt58-trusty;
    sudo apt-get -qq update;
    sudo apt-get install -y build-essential git;
    sudo apt-get install -y qt58base;
    sudo apt-get install -y qt58svg;
    sudo apt-get install -y qt58xmlpatterns;
    sudo apt-get install -y qt58imageformats;
    sudo apt-get install -y qt58tools;
    sudo apt-get install -y xpdf;
    sudo apt-get install -y xvfb;
    sudo apt-get install -y g++-5;
    wget https://launchpad.net/ubuntu/+archive/primary/+files/ccache_3.3.4-1_amd64.deb;
    sudo dpkg -i ccache_3.3.4-1_amd64.deb;
    sudo chmod +x /opt/qt58/bin/qt58-env.sh;
    /opt/qt58/bin/qt58-env.sh;
  else
    brew update > /dev/null;
    brew install qt5;
    chmod -R 755 /usr/local/opt/qt5/*;
  fi
before_script:
- "if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then\n  uname -a;\n  which /opt/qt58/bin/qmake;\n
  \ /opt/qt58/bin/qmake --version;   \nelse\n  QTDIR=\"/usr/local/opt/qt5\";\n  PATH=\"$QTDIR/bin:$PATH\";\n
  \ LDFLAGS=-L$QTDIR/lib;\n  CPPFLAGS=-I$QTDIR/include;\n  PKG_CONFIG_PATH=/usr/local/opt/qt5/lib/pkgconfig;\n
  \ chmod -R 755 /usr/local/opt/qt5/*;  \n  qmake --version;  \nfi\n"
- mkdir build
- cd build
- pwd
- |
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    /opt/qt58/bin/qmake ../Seamly2D.pro -r CONFIG+=noDebugSymbols CONFIG+=checkWarnings;
  else
    qmake ../Seamly2D.pro -r CONFIG+=noDebugSymbols CONFIG+=no_ccache CONFIG+=noTests;
  fi
script:
- "$CXX --version"
- "if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then\n  build-wrapper-linux-x86-64 --out-dir
  ../bw-outputs make -j$(nproc);\n  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:\"$TRAVIS_BUILD_DIR/build/src/libs/vpropertyexplorer/bin:$TRAVIS_BUILD_DIR/build/src/libs/qmuparser/bin\";\n
  \ xvfb-run -a make --silent check TESTARGS=\"-silent\";\n  cd ..;\n  else\n  make
  -j8;\nfi  \n"
notifications:
  email:
    recipients:
    - susan.spencer@gmail.com
    on_success: always
    on_failure: always
before_deploy:
- |
  if [[ ("$TRAVIS_OS_NAME" == "osx") && ("$DEPLOY" == "true" ) ]]; then
    ../scripts/macfixqtdylibrpath.py $TRAVIS_BUILD_DIR/build/src/app/seamly2d/bin/Seamly2D.app;
    tar --exclude "*.DS_Store" -cvzf seamly2d-osx-${TRAVIS_COMMIT}.tar.gz $TRAVIS_BUILD_DIR/build/src/app/seamly2d/bin/Seamly2D.app/;
  fi
  ## Zip up the installation using a file name that identifies where the
  # binaries were built.
  - mkdir $TRAVIS_BUILD_DIR/to_deploy
  - export ZIPNAME=Seamly2D_${TRAVIS_OS_NAME}_${TRAVIS_COMMIT}.zip
  # Leave symlinks intact.
  - zip --symlinks --recurse-paths --quiet $TRAVIS_BUILD_DIR/to_deploy/$ZIPNAME $TRAVIS_BUILD_DIR/build/bin  
deploy:
  provider: BinTray
  file: travis-bintray.json
  user: slspencer
  key:
    secure: U9cFPY6pBLNQvXD1e7nIihi7fHtqKvtv8SkDSQsIAEYSpApQTW1nYwVwHHhpuz/5wBtVocRF6qckCLR4zkl6yLjqwjShr8VEZsj7yF2cGB65mSyPpkdtHy42h+rzdaD+SAhaBzO8PeGrbmg1BBFy2iVdw3QJn626w+HFseVM6siuJBKHgJF0GCPukFsutUELJ/wxSkeiCJvbJiZIyyMV+hJo+tWFjV6qb3NRvz8vPXP7l96u1G3r9m/HqFJsRSYXaG/6xnyGucvRevLLDNi4saLXyZU2phMuR8oXRDU2zVfQAp/WfRrYnMNwrHEU1B9yMTl5zbHGLTOtZB6GE+cFQFqXJzXhZcfEFhFQ0EmBz0uU7/9bApHomlwYbB3uj4fqre1GuGJopfFsuIvVj0Bn4s+4oltJXkqmSKKUEXMjs5kai3RhWy2bK5UnaePFS39DKIPwNkUO5UMZVkbAnQjrv9Cq5CQYc4P9L29q2BcKb10BvxvaWIohinJbShLnOGAaYlQ1gkBQ8e3g7wZ0KYOn49t3UWzX8AWVc79tr7tyo5XJQgdtftnjIUGZCuY52+4IMZdTA483VhkQ+hkjbRMgM4aHRL+c9YlsMCt4DJkF54rE8Rv+fyY0p9OO1tWJlcb/YnzMA8TFBTKxn9ApLkMWfk1e6kIh7R95Y6O+3+ZViTY=
  on:
    all_branches: true
    condition: "$DEPLOY = true"    
